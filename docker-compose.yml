version: '3'

services:
  # NextJS App
  website:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    command: npx nx serve website
    hostname: "admin"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=HostRegexp(`admin.microprefix.test`)"
      - "traefik.http.routers.website.entrypoints=web"
      - "traefik.http.services.website.loadbalancer.server.port=4200"
      - "traefik.port=80"
    ports:
      - 4200:4200

  # NestJS App
  api:
    extends:
      file: docker-compose.base.yml
      service: nx-app-base
    command: npx nx serve api
    hostname: "api"
    environment:
      DATABASE_URL: "mysql://root:password@mysql:3306/boilerplate?schema=public&connect_timeout=300"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.microprefix.test`)"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.services.api.loadbalancer.server.port=3000"
      - "traefik.port=80"
    ports:
      - 3000:3000

  # MySQL Service
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: boilerplate
    ports:
      - 3306:3306
    volumes:
      - mysql_data:/var/lib/mysql

  # Traefik
  traefik:
    image: "traefik:v2.4"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - default

volumes:
  mono-node-modules: null
  mysql_data:

networks:
  default:
    external:
      name: traefik_default
